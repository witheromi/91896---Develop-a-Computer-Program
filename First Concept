########################################################################
###This program is so we know what party items customers have hired ###
########################################################################

#import tkinter so we can make a GUI
from tkinter import *
from tkinter import ttk

#quit subroutine
def quit():
    main_window.destroy()



def save_info():
    full_name_info = full_name.get()
    reciept_number_info = reciept_number.get()
    party_items_info = party_items.get()
    print(full_name_info, reciept_number_info, party_item_info)

    file = open("customer_details.txt", "w")
    file.write(full_name_info)
    file.write(reciept_number_info)
    file.write(party_items_info)
    file.close()
    print( full_name_info, " your order has been registered successfully")

    full_name_entry.delete(0, END)
    reciept_number_entry.delete(0, END)
    party_items_entry.delete(0, END)
#print details of all the customers
def print_customer_details ():
    name_count = 0
    #Create the column headings
    Label(main_window, font=("Helvetica 10 bold"),text="Row").grid(column=0,row=7)
    Label(main_window, font=("Helvetica 10 bold"),text="Full Name").grid(column=1,row=7)
    Label(main_window, font=("Helvetica 10 bold"),text="Reciept Number").grid(column=2,row=7)
    Label(main_window, font=("Helvetica 10 bold"),text="Party Items").grid(column=3,row=7)
    Label(main_window, font=("Helvetica 10 bold"), text="No. of Items Hired").grid(column=4, row=7)
    #add each item in the list into its own row
    while name_count < counters['total_entries'] :
        Label(main_window, text=name_count).grid(column=0,row=name_count+8)
        Label(main_window, text=(customer_details[name_count][0])).grid(column=1,row=name_count+8)
        Label(main_window, text=(customer_details[name_count][1])).grid(column=2,row=name_count+8)
        Label(main_window, text=(customer_details[name_count][2])).grid(column=3,row=name_count+8)
        Label(main_window, text=(customer_details[name_count][2])).grid(column=3,row=name_count+8)
        name_count +=  1
        counters['name_count'] = name_count
       
#Check the inputs are all valid
def check_inputs ():
    input_check = 0
    Label(main_window, text="               ") .grid(column=2,row=0)
    Label(main_window, text="               ") .grid(column=2,row=1)
    Label(main_window, text="               ") .grid(column=2,row=2)
    Label(main_window, text="               ") .grid(column=2, row=3)
    #Check that name is not blank, set error text if blank  
    if len(entry_full_name.get()) == 0 :
        Label(main_window,fg="red", text="Required") .grid(column=2,row=0)
        input_check = 1
    #Check that reciept number is not blank, set error text if blank    
    if len(entry_reciept_number.get()) == 0 :
        Label(main_window,fg="red", text="Required") .grid(column=2,row=1)
        input_check = 1
    #Check that party items have been chosen, set error text if blank  
    if len(combo_party_items.get())==0:
        Label(main_window,fg="red", text="Required").grid(column=2,row=2)
        input_check = 1

    if len (entry_no_item_hired.get()) ==0:
        Label(main_window,fg="red", text="Required") .grid(column=2,row=3)
        input_check = 1
    if input_check == 0 :
        append_name()

#add the next customer to the list
def append_name ():
    #append each item to its own area of the list
    customer_details.append([entry_full_name.get(),entry_reciept_number.get(),combo_party_items.get(),entry_no_item_hired.get()])
    #clear the boxes
    entry_full_name.delete(0,'end')
    entry_reciept_number.delete(0,'end')
    combo_party_items.set('')#Clear the combo box
    entry_no_item_hired.delete(0,'end')
    counters['total_entries'] += 1

#delete a row from the list
def delete_row ():
    #find which row is to be deleted and delete it
    del customer_details[int(delete_item.get())]
    counters['total_entries'] -= 1
    name_count = counters['name_count']
    delete_item.delete(0,'end')
    #clear the last item displayed on the GUI
    Label(main_window, text="       ").grid(column=0,row=name_count+7)
    Label(main_window, text="       ").grid(column=1,row=name_count+7)
    Label(main_window, text="       ").grid(column=2,row=name_count+7)
    Label(main_window, text="       ").grid(column=3,row=name_count+7)
    Label(main_window, text="       ").grid(column=4,row=name_count+7)
    #print all the items in the list
    print_customer_details()

#create the buttons and labels
def setup_buttons():
    #create all the empty and default labels, buttons and entry boxes. Put them in the correct grid location
    Label(main_window, text="Full Name", background = "pink", font = "3") .grid(column=0,row=0,sticky=E)
    Label(main_window, text="Reciept Number") .grid(column=0,row=1,sticky=E)
    Button(main_window, text="Quit",command=quit,width = 10) .grid(column=4, row=0,sticky=E)
    Button(main_window, text="Append Details",command=check_inputs) .grid(column=3,row=1)
    Button(main_window, text="Print Details",command=print_customer_details,width = 10) .grid(column=4,row=1,sticky=E)
    Label(main_window, text="Party Items") .grid(column=0,row=2,sticky=E)
    Label(main_window, text="No. of Items Hired").grid(column=0,row=3,sticky=E)
    Label(main_window, text="Row #") .grid(column=3,row=2,sticky=E)
    Button(main_window, text="Delete Row",command=delete_row,width = 10) .grid(column=4,row=3,sticky=E)
    Label(main_window, text="               ") .grid(column=2,row=0)

#start the program running
def main():
    #Start the GUI up
    setup_buttons()
    main_window.mainloop()
            
   
#create empty list for customer details and empty variable for entries in the list
counters = {'total_entries':0,'name_count':0}
customer_details = []    
main_window =Tk()    
entry_full_name = Entry(main_window)
entry_full_name.grid(column=1,row=0)
entry_reciept_number = Entry(main_window)
entry_reciept_number.grid(column=1,row=1)
combo_party_items = ttk.Combobox(main_window, values=["Napkins", "Party Hats", "Cutlery", "Balloons", "Plates", "Cups","Banners", "Pinatas", "Table Covers","Confetti", "Straws", "Candles" ])
combo_party_items.grid(column=1,row=2)
entry_no_item_hired = Entry(main_window)
entry_no_item_hired.grid(column=1, row=3)
delete_item = Entry(main_window)
delete_item .grid(column=3,row=3)
  
main()
